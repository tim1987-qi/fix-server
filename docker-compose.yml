version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13-alpine
    container_name: fix-server-db
    environment:
      POSTGRES_DB: fixserver
      POSTGRES_USER: fixserver
      POSTGRES_PASSWORD: fixserver
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fixserver"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FIX Server Application
  fix-server:
    build: .
    container_name: fix-server-app
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_PASSWORD: fixserver
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/fixserver
    ports:
      - "8080:8080"  # HTTP/Admin port
      - "9878:9878"  # FIX port
      - "9879:9879"  # FIX TLS port
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Prometheus for Metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: fix-server-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

  # Grafana for Dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: fix-server-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  postgres_data:
  grafana_data: